{"version":3,"sources":["webpack:///./src/components/ui/Banner/styles.js","webpack:///./src/components/ui/Banner/index.js","webpack:///./src/components/AboutIntro/index.js","webpack:///./src/components/RecentPost/styles.js","webpack:///./src/components/RecentPost/index.js","webpack:///./src/pages/index.tsx","webpack:///./src/components/ui/Button/styles.js","webpack:///./src/components/ui/Button/index.js"],"names":["Banner","styled","section","Content","p","title","subtitle","content","linkTo","linkText","Container","TitleSection","to","Button","primary","name","AboutIntro","aboutIntro","markdownRemark","frontmatter","RecentPost","div","Post","Card","Image","figure","Title","h3","Date","ButtonUpdates","span","posts","allMarkdownRemark","edges","center","map","item","node","id","slug","fields","date","cover","key","whileHover","scale","whileTap","fluid","childImageSharp","alt","IndexPage","Layout","SEO","motion","custom","button","block","children"],"mappings":"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","file":"component---src-pages-index-tsx-858ef2c8c97f2ff5a18f.js","sourcesContent":["import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\n\r\nexport const Banner = styled.section`\r\n  ${tw`bg-gray-100 border-b border-indigo-100 `};\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  ${tw`mb-8`};\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'gatsby';\r\n\r\nimport Container from 'components/ui/Container';\r\nimport Button from 'components/ui/Button';\r\nimport TitleSection from 'components/ui/TitleSection';\r\n\r\nimport * as Styled from './styles';\r\n\r\nconst Banner = ({ title, subtitle, content, linkTo, linkText }) => (\r\n  <Styled.Banner>\r\n    <Container section>\r\n      <TitleSection title={title} subtitle={subtitle} />\r\n      <Styled.Content>{content}</Styled.Content>\r\n      <Link to={linkTo}>\r\n        <Button primary name='{linkTo}'>{linkText}</Button>\r\n      </Link>\r\n    </Container>\r\n  </Styled.Banner>\r\n);\r\n\r\nBanner.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string,\r\n  content: PropTypes.any.isRequired,\r\n  linkTo: PropTypes.string.isRequired,\r\n  linkText: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Banner;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport Banner from 'components/ui/Banner';\r\n\r\nconst AboutIntro = () => {\r\n  const { markdownRemark } = useStaticQuery(graphql`\r\n    query {\r\n      markdownRemark(frontmatter: { category: { eq: \"intro section\" } }) {\r\n        html\r\n        frontmatter {\r\n          title\r\n          subtitle\r\n          content\r\n          linkTo\r\n          linkText\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const aboutIntro = markdownRemark.frontmatter;\r\n\r\n  return (\r\n    <Banner\r\n      title={aboutIntro.title}\r\n      subtitle={aboutIntro.subtitle}\r\n      content={aboutIntro.content}\r\n      linkTo={aboutIntro.linkTo}\r\n      linkText={aboutIntro.linkText}\r\n    />\r\n  );\r\n};\r\n\r\nAboutIntro.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n  linkTo: PropTypes.string.isRequired,\r\n  linkText: PropTypes.string.isRequired\r\n};\r\n\r\nexport default AboutIntro;\r\n","import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\n\r\nexport const RecentPost = styled.div`\r\n  ${tw`w-full flex flex-wrap`};\r\n`;\r\n\r\nexport const Post = styled.div`\r\n  ${tw`w-full sm:w-1/2 p-3`};\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  ${tw`w-full h-full rounded-lg flex flex-col overflow-hidden border border-gray-300`};\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  ${tw`p-1 py-1 text-indigo-900`};\r\n`;\r\n\r\nexport const Image = styled.figure`\r\n  ${tw`w-full`};\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  ${tw`font-semibold mb-0 py-1`};\r\n`;\r\n\r\nexport const Description = styled.p``;\r\n\r\nexport const Date = styled.h3`\r\n  ${tw`text-xs text-blue-700`};\r\n`;\r\n\r\nexport const Tags = styled.div`\r\n  ${tw`p-1 py-1 mt-auto text-sm`}\r\n`;\r\n\r\nexport const Tag = styled.span`\r\n  ${tw`text-indigo-900 py-1 mr-1`}\r\n`;\r\n\r\nexport const ButtonUpdates = styled.div`\r\n  ${tw`flex flex-col w-full`};\r\n`;\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n/*import Img from 'gatsby-image';*/\r\nimport Img from 'gatsby-image';\r\nimport Link from 'gatsby-link';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\nimport Button from 'components/ui/Button';\r\n\r\nimport * as Styled from './styles';\r\n\r\nconst RecentPost = () => {\r\n  const { allMarkdownRemark } = useStaticQuery(graphql`\r\n    query {\r\n      allMarkdownRemark(\r\n        filter: { frontmatter: { category: { eq: \"blog\" }, published: { eq: true } } }\r\n        sort: { fields: frontmatter___date, order: DESC }\r\n        limit: 2\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              title\r\n              date(formatString: \"DD MMMM YYYY\")\r\n              cover {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 800) {\r\n                    ...GatsbyImageSharpFluid\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const posts = allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Container section>\r\n      <TitleSection title='Recent' subtitle='Updates' center />\r\n      <Styled.RecentPost>\r\n        {posts.map((item) => {\r\n          const {\r\n            id,\r\n            fields: { slug },\r\n            frontmatter: { title,date,cover}\r\n          } = item.node;\r\n\r\n          return (\r\n            <Styled.Post key={id}>\r\n              \r\n                <motion.div whileHover={{ scale: 1.02 }} whileTap={{ scale: 1 }}>\r\n                  <Styled.Card>\r\n                    {cover != null && <><Styled.Image>\r\n                      <Img fluid={cover.childImageSharp.fluid} alt={title} />\r\n                    </Styled.Image>\r\n                    </>}\r\n                    <Styled.Content>\r\n                      <Styled.Date>{date}</Styled.Date>\r\n                      <Link to={slug}>\r\n                      <Styled.Title>{title}</Styled.Title>\r\n                      </Link>\r\n                    </Styled.Content>\r\n\r\n                  </Styled.Card>\r\n                </motion.div>\r\n              \r\n            </Styled.Post>\r\n          );\r\n        })}\r\n        <Styled.ButtonUpdates>\r\n         <Link to='updates'>\r\n          <center><Button primary name='All updates'>See all updates</Button></center>\r\n        </Link>\r\n        </Styled.ButtonUpdates>\r\n      </Styled.RecentPost>\r\n     \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RecentPost;\r\n","import React from 'react';\r\n\r\nimport Layout from 'components/Layout';\r\nimport SEO from 'components/SEO';\r\nimport AboutIntro from 'components/AboutIntro';\r\nimport ResearchInterest from 'components/ResearchInterest';\r\nimport RecentPost from 'components/RecentPost';\r\n\r\nconst IndexPage: React.FC = () => {\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" />\r\n      <AboutIntro />\r\n      <hr />\r\n      <RecentPost />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n","import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\nimport { motion } from 'framer-motion';\r\n\r\nexport const Button = motion.custom(styled.button`\r\n  outline: none !important;\r\n  ${tw`py-2 px-8 rounded border border-blue-700 text-white`};\r\n\r\n  ${({ primary }) => (primary ? tw`bg-blue-700` : tw`text-blue-700`)};\r\n\r\n  ${({ block }) => block && tw`w-full`};\r\n`);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as Styled from './styles';\r\n\r\nconst Button = ({ primary, block, children }) => (\r\n  <Styled.Button primary={primary} block={block} whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\r\n    {children}\r\n  </Styled.Button>\r\n);\r\n\r\nButton.propTypes = {\r\n  primary: PropTypes.bool,\r\n  block: PropTypes.bool,\r\n  children: PropTypes.any.isRequired\r\n};\r\n\r\nexport default Button;\r\n"],"sourceRoot":""}