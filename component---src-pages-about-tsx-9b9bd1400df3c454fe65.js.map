{"version":3,"sources":["webpack:///./src/components/ui/About/styles.js","webpack:///./src/components/ui/About/index.js","webpack:///./src/components/Biography/index.js","webpack:///./src/components/Volunteer/index.js","webpack:///./src/pages/about.tsx","webpack:///./src/components/Experience/index.js","webpack:///./src/components/ui/Timeline/styles.js","webpack:///./src/components/ui/Timeline/index.js","webpack:///./src/components/Education/index.js"],"names":["Banner","styled","section","Content","p","Icon","span","About","title","subtitle","content","Container","TitleSection","target","alt","rel","href","Orcid","color","size","Researchgate","Publons","Mendeley","Scopus","Googlescholar","Linkedin","Github","Wechat","Biography","markdownRemark","biography","frontmatter","html","FormatHtml","Volunteer","allMarkdownRemark","sectionTitle","experiences","edges","map","item","node","id","company","position","startDate","endDate","Timeline","key","AboutPage","Layout","SEO","Education","Experience","div","Details","Title","Subtitle","Date","Point","education","university","degree"],"mappings":"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","file":"component---src-pages-about-tsx-9b9bd1400df3c454fe65.js","sourcesContent":["import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\n\r\nexport const Banner = styled.section`\r\n  ${tw`bg-gray-100 border-b border-indigo-100`};\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  ${tw`mb-8`};\r\n`;\r\n\r\nexport const Icon = styled.span`\r\n  ${tw`flex items-center justify-center w-10 h-10 rounded-full mb-2 m-1`};\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\n\r\n/*import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'*/\r\nimport { Publons, Mendeley, Googlescholar, Github, Scopus, Orcid, Linkedin, Researchgate, Wechat} from '@icons-pack/react-simple-icons';\r\n\r\nimport * as Styled from './styles';\r\n\r\nconst About = ({ title, subtitle, content }) => (\r\n  <Styled.Banner>\r\n    <Container section>\r\n      <TitleSection title={title} subtitle={subtitle} />\r\n      <Styled.Content>{content}</Styled.Content>\r\n      <a target='_blank' alt='ORCID' rel='noopener noreferrer' href='https://orcid.org/0000-0002-5640-4413'>\r\n      <Styled.Icon>\r\n        <Orcid color=\"#a6ce39\" size={32} />\r\n       </Styled.Icon>\r\n      </a>\r\n      \r\n      <a target='_blank' alt='ResearchGate' rel='noopener noreferrer' href='https://www.researchgate.net/profile/Muhammad_Syafrudin'>\r\n       <Styled.Icon>\r\n        <Researchgate color=\"#0cb\" size={32} />\r\n       </Styled.Icon>\r\n      </a>\r\n\r\n      <a target='_blank' alt='Publons' rel='noopener noreferrer' href='https://publons.com/researcher/1501728/muhammad-syafrudin/'>\r\n       <Styled.Icon>\r\n        <Publons color=\"#336699\" size={32} />\r\n       </Styled.Icon>\r\n      </a>\r\n\r\n      <a target='_blank' alt='Mendeley' rel='noopener noreferrer' href='https://www.mendeley.com/profiles/muhammad-syafrudin2/'>\r\n       <Styled.Icon>\r\n        <Mendeley color=\"#9D1620\" size={32} />\r\n       </Styled.Icon>\r\n      </a>\r\n\r\n      <a target='_blank' alt='Scopus Author ID: 57197741727' rel='noopener noreferrer' href='https://www.scopus.com/authid/detail.uri?authorId=57197741727'>\r\n       <Styled.Icon>\r\n        <Scopus color=\"#E9711C\" size={32} />\r\n       </Styled.Icon>\r\n      </a>\r\n\r\n      <a target='_blank' alt='Google Scholar' rel='noopener noreferrer' href='https://scholar.google.co.kr/citations?user=WLTzkOMAAAAJ&hl=en'>\r\n       <Styled.Icon>\r\n        <Googlescholar color=\"#4285F4\" size={32} />\r\n       </Styled.Icon>\r\n      </a>\r\n\r\n      <a target='_blank' alt='LinkedIn' rel='noopener noreferrer' href='https://www.linkedin.com/in/justudin'>\r\n       <Styled.Icon>\r\n        <Linkedin color=\"#2b6cb0\" size={32} />\r\n       </Styled.Icon>\r\n      </a>\r\n\r\n      <a target='_blank' alt='Github' rel='noopener noreferrer' href='https://github.com/justudin'>\r\n      <Styled.Icon>\r\n        <Github color=\"#24292e\" size={32} />\r\n       </Styled.Icon>\r\n      </a>\r\n      \r\n      <a target='_blank' alt='Chat 1:1 with me' rel='noopener noreferrer' href='https://open.kakao.com/o/s1qqvptc'>\r\n       <Styled.Icon>\r\n        <Wechat color=\"#7BB32E\" size={32} />\r\n       </Styled.Icon>\r\n      </a>\r\n\r\n    </Container>\r\n  </Styled.Banner>\r\n);\r\n\r\nAbout.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string,\r\n  content: PropTypes.any.isRequired\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport About from 'components/ui/About';\r\nimport FormatHtml from 'components/utils/FormatHtml';\r\n\r\nconst Biography = () => {\r\n  const { markdownRemark } = useStaticQuery(graphql`\r\n    query {\r\n      markdownRemark(frontmatter: { category: {eq: \"biography\"} }) {\r\n        html\r\n        frontmatter {\r\n          title,\r\n          subtitle\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const biography = markdownRemark.frontmatter;\r\n  const content = markdownRemark.html;\r\n\r\n  return (\r\n    <About\r\n      title={biography.title}\r\n      subtitle={biography.subtitle}\r\n      content={<FormatHtml content={content} />}\r\n    />\r\n  );\r\n};\r\n\r\nBiography.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Biography;\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport Timeline from 'components/ui/Timeline';\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\nimport FormatHtml from 'components/utils/FormatHtml';\r\n\r\nconst Volunteer = () => {\r\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\r\n    query {\r\n      markdownRemark(frontmatter: { category: { eq: \"volunteer section\" } }) {\r\n        frontmatter {\r\n          title\r\n          subtitle\r\n        }\r\n      }\r\n      allMarkdownRemark(\r\n        filter: { frontmatter: { category: { eq: \"volunteer\" } } }\r\n        sort: { order: DESC, fields: frontmatter___order }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            html\r\n            frontmatter {\r\n              company\r\n              position\r\n              startDate\r\n              endDate\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const sectionTitle = markdownRemark.frontmatter;\r\n  const experiences = allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Container section>\r\n      <TitleSection subtitle={sectionTitle.subtitle} />\r\n\r\n      {experiences.map((item) => {\r\n        const {\r\n          id,\r\n          html,\r\n          frontmatter: { company, position, startDate, endDate }\r\n        } = item.node;\r\n\r\n        return (\r\n          <Timeline\r\n            key={id}\r\n            title={position}\r\n            subtitle={company}\r\n            content={<FormatHtml content={html} />}\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n          />\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Volunteer;\r\n","import React from 'react';\r\n\r\nimport Layout from 'components/Layout';\r\nimport SEO from 'components/SEO';\r\nimport Experience from 'components/Experience';\r\nimport Education from 'components/Education';\r\nimport Biography from 'components/Biography';\r\nimport Volunteer from 'components/Volunteer';\r\n\r\n\r\nconst AboutPage: React.FC = () => (\r\n  <Layout>\r\n    <SEO title=\"About\" />\r\n    <Biography />\r\n    <Education />\r\n    <hr />\r\n    <Experience />\r\n    <hr />\r\n    <Volunteer />\r\n    \r\n  </Layout>\r\n);\r\n\r\nexport default AboutPage;\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport Timeline from 'components/ui/Timeline';\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\nimport FormatHtml from 'components/utils/FormatHtml';\r\n\r\nconst Experience = () => {\r\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\r\n    query {\r\n      markdownRemark(frontmatter: { category: { eq: \"experiences section\" } }) {\r\n        frontmatter {\r\n          title\r\n          subtitle\r\n        }\r\n      }\r\n      allMarkdownRemark(\r\n        filter: { frontmatter: { category: { eq: \"experiences\" } } }\r\n        sort: { order: DESC, fields: frontmatter___order }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            html\r\n            frontmatter {\r\n              company\r\n              position\r\n              startDate\r\n              endDate\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const sectionTitle = markdownRemark.frontmatter;\r\n  const experiences = allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Container section>\r\n      <TitleSection subtitle={sectionTitle.subtitle} />\r\n\r\n      {experiences.map((item) => {\r\n        const {\r\n          id,\r\n          html,\r\n          frontmatter: { company, position, startDate, endDate }\r\n        } = item.node;\r\n\r\n        return (\r\n          <Timeline\r\n            key={id}\r\n            title={position}\r\n            subtitle={company}\r\n            content={<FormatHtml content={html} />}\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n          />\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n","import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\n\r\nexport const Timeline = styled.div`\r\n  ${tw`flex flex-col sm:flex-row w-full p-4 relative border-l border-indigo-200`};\r\n\r\n  &:last-child {\r\n    ${tw`pb-0`};\r\n  }\r\n`;\r\n\r\nexport const Details = styled.div`\r\n  ${tw`w-full sm:w-1/3`};\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  ${tw`w-full sm:w-2/3 mt-4 sm:mt-0 text-xs`};\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  ${tw`mt-3`};\r\n`;\r\n\r\nexport const Subtitle = styled.div`\r\n  ${tw`text-xs`};\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  ${tw`text-xs`};\r\n  width: fit-content;\r\n`;\r\n\r\nexport const Point = styled.span`\r\n  ${tw`w-3 h-3 border border-blue-700 bg-blue-600 rounded-full absolute`};\r\n  left: -6px;\r\n  top: 20px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as Styled from './styles';\r\n\r\nconst Timeline = ({ title, subtitle, content, startDate, endDate }) => (\r\n  <Styled.Timeline>\r\n    <Styled.Point />\r\n    <Styled.Details>\r\n      <Styled.Date>\r\n        {startDate} - {endDate}\r\n      </Styled.Date>\r\n      <Styled.Title>{title}</Styled.Title>\r\n      <Styled.Subtitle>{subtitle}</Styled.Subtitle>\r\n    </Styled.Details>\r\n    <Styled.Content>{content}</Styled.Content>\r\n  </Styled.Timeline>\r\n);\r\n\r\nTimeline.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string.isRequired,\r\n  content: PropTypes.any.isRequired,\r\n  startDate: PropTypes.string.isRequired,\r\n  endDate: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Timeline;\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport Timeline from 'components/ui/Timeline';\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\nimport FormatHtml from 'components/utils/FormatHtml';\r\n\r\nconst Education = () => {\r\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\r\n    query {\r\n      markdownRemark(frontmatter: { category: { eq: \"education section\" } }) {\r\n        frontmatter {\r\n          title\r\n          subtitle\r\n        }\r\n      }\r\n      allMarkdownRemark(\r\n        filter: { frontmatter: { category: { eq: \"education\" } } }\r\n        sort: { order: DESC, fields: frontmatter___order }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            html\r\n            frontmatter {\r\n              university\r\n              degree\r\n              startDate\r\n              endDate\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const sectionTitle = markdownRemark.frontmatter;\r\n  const education = allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Container section>\r\n      <TitleSection subtitle={sectionTitle.subtitle} />\r\n\r\n      {education.map((item) => {\r\n        const {\r\n          id,\r\n          html,\r\n          frontmatter: { university, degree, startDate, endDate }\r\n        } = item.node;\r\n\r\n        return (\r\n          <Timeline\r\n            key={id}\r\n            title={degree}\r\n            subtitle={university}\r\n            content={<FormatHtml content={html} />}\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n          />\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n"],"sourceRoot":""}