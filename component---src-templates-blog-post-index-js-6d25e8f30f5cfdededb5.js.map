{"version":3,"sources":["webpack:///./src/components/utils/FormatHtml/index.js","webpack:///./src/templates/BlogPost/styles.js","webpack:///./src/templates/BlogPost/index.js"],"names":["FormatHtml","content","className","dangerouslySetInnerHTML","__html","Links","styled","h3","figure","div","Tag","span","query","BlogPost","data","pageContext","post","markdownRemark","previous","next","Layout","SEO","title","frontmatter","Container","section","TitleSection","date","subtitle","html","tags","map","item","key","to","fields","slug","rel","substr"],"mappings":"4FAAA,yBAiBeA,IAbI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,0BACEC,UAAU,cACVC,wBAAyB,CACvBC,OAAQH,O,uMCGDI,GARQC,IAAOC,GAAV,oEAAGD,CAAH,SACZ,wCAGeA,IAAOE,OAAV,oEAAGF,CAAH,SACZ,+FAGeA,IAAOG,IAAV,oEAAGH,CAAH,SACZ,kFAOOI,GAJOJ,IAAOG,IAAV,mEAAGH,CAAH,QACX,uDAGaA,IAAOK,KAAV,kEAAGL,CAAH,QACV,0GC4BOM,GAFEC,UAlCE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAClBC,EAAOF,EAAKG,eACVC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KAElB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,MAAON,EAAKO,YAAYD,QAC7B,kBAACE,EAAA,EAAD,CAAWC,SAAO,GAChB,kBAACC,EAAA,EAAD,CAAcJ,MAAON,EAAKO,YAAYI,KAAMC,SAAUZ,EAAKO,YAAYD,QACvE,kBAACtB,EAAA,EAAD,CAAYC,QAASe,EAAKa,OACzBb,EAAKO,YAAYO,KAAKC,KAAI,SAACC,GAAD,OACX,kBAAC,EAAD,CAAYC,IAAKD,GAAjB,IAAyBA,MAEzC,kBAAC,EAAD,KACE,8BACGd,GACC,kBAAC,IAAD,CAAMgB,GAAIhB,EAASiB,OAAOC,KAAMC,IAAI,YAApC,KACKnB,EAASK,YAAYD,MAAMgB,OAAO,EAAG,IAD1C,OAKJ,8BACGnB,GACC,kBAAC,IAAD,CAAMe,GAAIf,EAAKgB,OAAOC,KAAMC,IAAI,QAC7BlB,EAAKI,YAAYD,MAAMgB,OAAO,EAAG,IADpC,aAaI","file":"component---src-templates-blog-post-index-js-6d25e8f30f5cfdededb5.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst FormatHtml = ({ content }) => (\r\n  <span\r\n    className=\"format-html\"\r\n    dangerouslySetInnerHTML={{\r\n      __html: content\r\n    }}\r\n  />\r\n);\r\n\r\nFormatHtml.propTypes = {\r\n  content: PropTypes.any.isRequired\r\n};\r\n\r\nexport default FormatHtml;\r\n","import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\n\r\nexport const Title = styled.h3`\r\n  ${tw`font-semibold mb-4`};\r\n`;\r\n\r\nexport const Image = styled.figure`\r\n  ${tw`w-full rounded-lg overflow-hidden mt-4 mb-10`};\r\n`;\r\n\r\nexport const Links = styled.div`\r\n  ${tw`w-full flex justify-between mt-10`};\r\n`;\r\n\r\nexport const Tags = styled.div`\r\n  ${tw`p-4 pt-2 mt-auto`}\r\n`;\r\n\r\nexport const Tag = styled.span`\r\n  ${tw`text-xs text-indigo-900 py-1 mr-1`}\r\n`;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Link from 'gatsby-link';\r\n\r\nimport Layout from 'components/Layout';\r\nimport SEO from 'components/SEO';\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\nimport FormatHtml from 'components/utils/FormatHtml';\r\n\r\nimport * as Styled from './styles';\r\n\r\nconst BlogPost = ({ data, pageContext }) => {\r\n  const post = data.markdownRemark;\r\n  const { previous, next } = pageContext;\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={post.frontmatter.title} />\r\n      <Container section>\r\n        <TitleSection title={post.frontmatter.date} subtitle={post.frontmatter.title} />\r\n        <FormatHtml content={post.html} />\r\n        {post.frontmatter.tags.map((item) => (\r\n                        <Styled.Tag key={item}>#{item}</Styled.Tag>\r\n        ))}\r\n        <Styled.Links>\r\n          <span>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"previous\">\r\n                ← {previous.frontmatter.title.substr(0, 40)}..\r\n              </Link>\r\n            )}\r\n          </span>\r\n          <span>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title.substr(0, 40)}.. →\r\n              </Link>\r\n            )}\r\n          </span>\r\n        </Styled.Links>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BlogPost;\r\n\r\nexport const query = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"DD MMMM YYYY\")\r\n        tags\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}