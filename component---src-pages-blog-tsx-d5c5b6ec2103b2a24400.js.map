{"version":3,"sources":["webpack:///./src/components/Posts/styles.js","webpack:///./src/components/Posts/index.js","webpack:///./src/pages/blog.tsx"],"names":["Posts","styled","div","Post","Card","Content","Title","figure","h3","Description","p","Date","Tags","Tag","span","markdownRemark","allMarkdownRemark","sectionTitle","frontmatter","posts","edges","Container","section","TitleSection","title","subtitle","center","map","item","node","id","slug","fields","description","date","tags","key","to","whileHover","scale","whileTap","BlogPage","Layout","SEO"],"mappings":"uOAGaA,EAAQC,IAAOC,IAAV,gEAAGD,CAAH,SACZ,+CAGOE,EAAOF,IAAOC,IAAV,+DAAGD,CAAH,SACX,4EAGOG,EAAOH,IAAOC,IAAV,+DAAGD,CAAH,SACX,oJAGOI,EAAUJ,IAAOC,IAAV,kEAAGD,CAAH,SACd,kCAOOK,GAJQL,IAAOM,OAAV,gEAAGN,CAAH,SACZ,gBAGeA,IAAOO,GAAV,gEAAGP,CAAH,SACZ,yCAGOQ,EAAcR,IAAOS,EAAV,sEAAGT,CAAH,MAEXU,EAAOV,IAAOO,GAAV,+DAAGP,CAAH,SACX,sCAGOW,EAAOX,IAAOC,IAAV,+DAAGD,CAAH,QACX,uDAGOY,EAAMZ,IAAOa,KAAV,8DAAGb,CAAH,QACV,yGC6CSD,EAxED,WAAO,IAAD,SACVe,EADU,EACVA,eAAgBC,EADN,EACMA,kBA+BlBC,EAAeF,EAAeG,YAC9BC,EAAQH,EAAkBI,MAEhC,OACE,kBAACC,EAAA,EAAD,CAAWC,SAAO,GAChB,kBAACC,EAAA,EAAD,CAAcC,MAAOP,EAAaO,MAAOC,SAAUR,EAAaQ,SAAUC,QAAM,IAChF,kBAAC,EAAD,KACGP,EAAMQ,KAAI,SAACC,GAAU,IAAD,EAKfA,EAAKC,KAHPC,EAFiB,EAEjBA,GACUC,EAHO,EAGjBC,OAAUD,KAHO,IAIjBb,YAAeM,EAJE,EAIFA,MAAOS,EAJL,EAIKA,YAAaC,EAJlB,EAIkBA,KAAMC,EAJxB,EAIwBA,KAG3C,OACE,kBAAC,EAAD,CAAaC,IAAKN,GAChB,kBAAC,IAAD,CAAMO,GAAIN,GACR,kBAAC,IAAO7B,IAAR,CAAYoC,WAAY,CAAEC,MAAO,MAAQC,SAAU,CAAED,MAAO,IAC1D,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAcL,GACd,kBAAC,EAAD,KAAeV,GACf,kBAAC,EAAD,KAAqBS,IAEvB,kBAAC,EAAD,KACGE,EAAKR,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,CAAYQ,IAAKR,GAAjB,IAAyBA,iBCnDlCa,UATY,WACzB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKnB,MAAM,YACX,kBAAC,EAAD,S","file":"component---src-pages-blog-tsx-d5c5b6ec2103b2a24400.js","sourcesContent":["import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\n\r\nexport const Posts = styled.div`\r\n  ${tw`w-full flex flex-wrap`};\r\n`;\r\n\r\nexport const Post = styled.div`\r\n  ${tw`w-full sm:w-1/2 p-3`};\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  ${tw`w-full h-full rounded-lg flex flex-col overflow-hidden border border-gray-300`};\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  ${tw`p-4 text-indigo-900`};\r\n`;\r\n\r\nexport const Image = styled.figure`\r\n  ${tw`w-full`};\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  ${tw`font-semibold mb-4`};\r\n`;\r\n\r\nexport const Description = styled.p``;\r\n\r\nexport const Date = styled.h3`\r\n  ${tw`text-xs text-blue-700`};\r\n`;\r\n\r\nexport const Tags = styled.div`\r\n  ${tw`p-4 pt-2 mt-auto`}\r\n`;\r\n\r\nexport const Tag = styled.span`\r\n  ${tw`text-xs text-indigo-900 py-1 mr-1`}\r\n`;\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n/*import Img from 'gatsby-image';*/\r\nimport Link from 'gatsby-link';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\n\r\nimport * as Styled from './styles';\r\n\r\nconst Posts = () => {\r\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\r\n    query {\r\n      markdownRemark(frontmatter: { category: { eq: \"blog section\" } }) {\r\n        frontmatter {\r\n          title\r\n          subtitle\r\n        }\r\n      }\r\n      allMarkdownRemark(\r\n        filter: { frontmatter: { category: { eq: \"blog\" }, published: { eq: true } } }\r\n        sort: { fields: frontmatter___date, order: DESC }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            html\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              title\r\n              description\r\n              date(formatString: \"MMM DD, YYYY\")\r\n              tags\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const sectionTitle = markdownRemark.frontmatter;\r\n  const posts = allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Container section>\r\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\r\n      <Styled.Posts>\r\n        {posts.map((item) => {\r\n          const {\r\n            id,\r\n            fields: { slug },\r\n            frontmatter: { title, description, date, tags }\r\n          } = item.node;\r\n\r\n          return (\r\n            <Styled.Post key={id}>\r\n              <Link to={slug}>\r\n                <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 1 }}>\r\n                  <Styled.Card>\r\n                    <Styled.Content>\r\n                      <Styled.Date>{date}</Styled.Date>\r\n                      <Styled.Title>{title}</Styled.Title>\r\n                      <Styled.Description>{description}</Styled.Description>\r\n                    </Styled.Content>\r\n                    <Styled.Tags>\r\n                      {tags.map((item) => (\r\n                        <Styled.Tag key={item}>#{item}</Styled.Tag>\r\n                      ))}\r\n                    </Styled.Tags>\r\n                  </Styled.Card>\r\n                </motion.div>\r\n              </Link>\r\n            </Styled.Post>\r\n          );\r\n        })}\r\n      </Styled.Posts>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from 'react';\r\n\r\nimport Layout from 'components/Layout';\r\nimport SEO from 'components/SEO';\r\nimport Posts from 'components/Posts';\r\n\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\n\r\nconst BlogPage: React.FC = () => {\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Updates\" />\r\n      <Posts />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BlogPage;\r\n"],"sourceRoot":""}