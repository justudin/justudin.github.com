{"version":3,"sources":["webpack:///./src/components/ui/About/styles.js","webpack:///./src/components/ui/About/index.js","webpack:///./src/components/Biography/index.js","webpack:///./src/components/Volunteer/index.js","webpack:///./src/pages/about.tsx","webpack:///./src/components/Experience/index.js","webpack:///./src/components/ui/Timeline/styles.js","webpack:///./src/components/ui/Timeline/index.js","webpack:///./src/components/ui/Button/styles.js","webpack:///./src/components/ui/Button/index.js","webpack:///./src/components/utils/FormatHtml/index.js","webpack:///./src/components/Education/index.js"],"names":["Banner","styled","section","Content","p","About","span","title","subtitle","content","Container","TitleSection","target","alt","rel","href","Button","primary","name","Biography","markdownRemark","biography","frontmatter","html","FormatHtml","Volunteer","allMarkdownRemark","sectionTitle","experiences","edges","map","item","node","id","company","position","startDate","endDate","Timeline","key","AboutPage","Layout","SEO","Education","Experience","div","Details","Title","Subtitle","Date","Point","motion","custom","button","block","children","whileHover","scale","whileTap","className","dangerouslySetInnerHTML","__html","education","university","degree"],"mappings":"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","file":"component---src-pages-about-tsx-149f18e1d26721957e48.js","sourcesContent":["import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\n\r\nexport const Banner = styled.section`\r\n  ${tw`bg-gray-100 border-b border-indigo-100`};\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  ${tw`mb-8`};\r\n`;\r\n\r\nexport const Icon = styled.span`\r\n  ${tw`flex items-center justify-center w-10 h-10 rounded-full mb-2 m-1`};\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\nimport Button from 'components/ui/Button';\r\n\r\nimport * as Styled from './styles';\r\n\r\nconst About = ({ title, subtitle, content }) => (\r\n  <Styled.Banner>\r\n    <Container section>\r\n      <TitleSection title={title} subtitle={subtitle} />\r\n      <Styled.Content>{content}</Styled.Content>\r\n      <a target='_blank' alt='Academic CV' rel='noopener noreferrer' href='../cv'><Button primary name='Academic CV'>Academic CV</Button></a>\r\n    </Container>\r\n  </Styled.Banner>\r\n);\r\n\r\nAbout.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string,\r\n  content: PropTypes.any.isRequired\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport About from 'components/ui/About';\r\nimport FormatHtml from 'components/utils/FormatHtml';\r\n\r\nconst Biography = () => {\r\n  const { markdownRemark } = useStaticQuery(graphql`\r\n    query {\r\n      markdownRemark(frontmatter: { category: {eq: \"biography\"} }) {\r\n        html\r\n        frontmatter {\r\n          title,\r\n          subtitle\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const biography = markdownRemark.frontmatter;\r\n  const content = markdownRemark.html;\r\n\r\n  return (\r\n    <About\r\n      title={biography.title}\r\n      subtitle={biography.subtitle}\r\n      content={<FormatHtml content={content} />}\r\n    />\r\n  );\r\n};\r\n\r\nBiography.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Biography;\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport Timeline from 'components/ui/Timeline';\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\nimport FormatHtml from 'components/utils/FormatHtml';\r\n\r\nconst Volunteer = () => {\r\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\r\n    query {\r\n      markdownRemark(frontmatter: { category: { eq: \"volunteer section\" } }) {\r\n        frontmatter {\r\n          title\r\n          subtitle\r\n        }\r\n      }\r\n      allMarkdownRemark(\r\n        filter: { frontmatter: { category: { eq: \"volunteer\" } } }\r\n        sort: { order: DESC, fields: frontmatter___order }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            html\r\n            frontmatter {\r\n              company\r\n              position\r\n              startDate\r\n              endDate\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const sectionTitle = markdownRemark.frontmatter;\r\n  const experiences = allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Container section>\r\n      <TitleSection subtitle={sectionTitle.subtitle} />\r\n\r\n      {experiences.map((item) => {\r\n        const {\r\n          id,\r\n          html,\r\n          frontmatter: { company, position, startDate, endDate }\r\n        } = item.node;\r\n\r\n        return (\r\n          <Timeline\r\n            key={id}\r\n            title={position}\r\n            subtitle={company}\r\n            content={<FormatHtml content={html} />}\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n          />\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Volunteer;\r\n","import React from 'react';\r\n\r\nimport Layout from 'components/Layout';\r\nimport SEO from 'components/SEO';\r\nimport Experience from 'components/Experience';\r\nimport Education from 'components/Education';\r\nimport Biography from 'components/Biography';\r\nimport Volunteer from 'components/Volunteer';\r\n\r\n\r\nconst AboutPage: React.FC = () => (\r\n  <Layout>\r\n    <SEO title=\"About\" />\r\n    <Biography />\r\n    <Education />\r\n    <hr />\r\n    <Experience />\r\n    <hr />\r\n    <Volunteer />\r\n    \r\n  </Layout>\r\n);\r\n\r\nexport default AboutPage;\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport Timeline from 'components/ui/Timeline';\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\nimport FormatHtml from 'components/utils/FormatHtml';\r\n\r\nconst Experience = () => {\r\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\r\n    query {\r\n      markdownRemark(frontmatter: { category: { eq: \"experiences section\" } }) {\r\n        frontmatter {\r\n          title\r\n          subtitle\r\n        }\r\n      }\r\n      allMarkdownRemark(\r\n        filter: { frontmatter: { category: { eq: \"experiences\" } } }\r\n        sort: { order: DESC, fields: frontmatter___order }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            html\r\n            frontmatter {\r\n              company\r\n              position\r\n              startDate\r\n              endDate\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const sectionTitle = markdownRemark.frontmatter;\r\n  const experiences = allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Container section>\r\n      <TitleSection subtitle={sectionTitle.subtitle} />\r\n\r\n      {experiences.map((item) => {\r\n        const {\r\n          id,\r\n          html,\r\n          frontmatter: { company, position, startDate, endDate }\r\n        } = item.node;\r\n\r\n        return (\r\n          <Timeline\r\n            key={id}\r\n            title={position}\r\n            subtitle={company}\r\n            content={<FormatHtml content={html} />}\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n          />\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n","import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\n\r\nexport const Timeline = styled.div`\r\n  ${tw`flex flex-col sm:flex-row w-full p-4 relative border-l border-indigo-200`};\r\n\r\n  &:last-child {\r\n    ${tw`pb-0`};\r\n  }\r\n`;\r\n\r\nexport const Details = styled.div`\r\n  ${tw`w-full sm:w-1/3`};\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  ${tw`w-full sm:w-2/3 mt-4 sm:mt-0 text-xs`};\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  ${tw`mt-3`};\r\n`;\r\n\r\nexport const Subtitle = styled.div`\r\n  ${tw`text-xs`};\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  ${tw`text-xs`};\r\n  width: fit-content;\r\n`;\r\n\r\nexport const Point = styled.span`\r\n  ${tw`w-3 h-3 border border-blue-700 bg-blue-600 rounded-full absolute`};\r\n  left: -6px;\r\n  top: 20px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as Styled from './styles';\r\n\r\nconst Timeline = ({ title, subtitle, content, startDate, endDate }) => (\r\n  <Styled.Timeline>\r\n    <Styled.Point />\r\n    <Styled.Details>\r\n      <Styled.Date>\r\n        {startDate} - {endDate}\r\n      </Styled.Date>\r\n      <Styled.Title>{title}</Styled.Title>\r\n      <Styled.Subtitle>{subtitle}</Styled.Subtitle>\r\n    </Styled.Details>\r\n    <Styled.Content>{content}</Styled.Content>\r\n  </Styled.Timeline>\r\n);\r\n\r\nTimeline.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string.isRequired,\r\n  content: PropTypes.any.isRequired,\r\n  startDate: PropTypes.string.isRequired,\r\n  endDate: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Timeline;\r\n","import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\nimport { motion } from 'framer-motion';\r\n\r\nexport const Button = motion.custom(styled.button`\r\n  outline: none !important;\r\n  ${tw`py-2 px-8 rounded border border-blue-700 text-white`};\r\n\r\n  ${({ primary }) => (primary ? tw`bg-blue-700` : tw`text-blue-700`)};\r\n\r\n  ${({ block }) => block && tw`w-full`};\r\n`);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as Styled from './styles';\r\n\r\nconst Button = ({ primary, block, children }) => (\r\n  <Styled.Button primary={primary} block={block} whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\r\n    {children}\r\n  </Styled.Button>\r\n);\r\n\r\nButton.propTypes = {\r\n  primary: PropTypes.bool,\r\n  block: PropTypes.bool,\r\n  children: PropTypes.any.isRequired\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst FormatHtml = ({ content }) => (\r\n  <span\r\n    className=\"format-html\"\r\n    dangerouslySetInnerHTML={{\r\n      __html: content\r\n    }}\r\n  />\r\n);\r\n\r\nFormatHtml.propTypes = {\r\n  content: PropTypes.any.isRequired\r\n};\r\n\r\nexport default FormatHtml;\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport Timeline from 'components/ui/Timeline';\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\nimport FormatHtml from 'components/utils/FormatHtml';\r\n\r\nconst Education = () => {\r\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\r\n    query {\r\n      markdownRemark(frontmatter: { category: { eq: \"education section\" } }) {\r\n        frontmatter {\r\n          title\r\n          subtitle\r\n        }\r\n      }\r\n      allMarkdownRemark(\r\n        filter: { frontmatter: { category: { eq: \"education\" } } }\r\n        sort: { order: DESC, fields: frontmatter___order }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            html\r\n            frontmatter {\r\n              university\r\n              degree\r\n              startDate\r\n              endDate\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const sectionTitle = markdownRemark.frontmatter;\r\n  const education = allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Container section>\r\n      <TitleSection subtitle={sectionTitle.subtitle} />\r\n\r\n      {education.map((item) => {\r\n        const {\r\n          id,\r\n          html,\r\n          frontmatter: { university, degree, startDate, endDate }\r\n        } = item.node;\r\n\r\n        return (\r\n          <Timeline\r\n            key={id}\r\n            title={degree}\r\n            subtitle={university}\r\n            content={<FormatHtml content={html} />}\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n          />\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n"],"sourceRoot":""}