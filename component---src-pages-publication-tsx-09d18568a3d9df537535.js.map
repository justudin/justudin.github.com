{"version":3,"sources":["webpack:///./src/components/ui/TimelinePublication/styles.js","webpack:///./src/components/ui/TimelinePublication/index.js","webpack:///./src/components/Publication/index.js","webpack:///./src/pages/publication.tsx","webpack:///./src/components/utils/FormatHtml/index.js"],"names":["TimelinePublication","styled","div","Details","Subtitle","Date","Point","span","content","year","Publication","markdownRemark","allMarkdownRemark","sectionTitle","frontmatter","publication","edges","Container","section","TitleSection","subtitle","conference","journal","map","item","node","id","html","university","degree","key","title","FormatHtml","PublicationPage","Layout","SEO","className","dangerouslySetInnerHTML","__html"],"mappings":"8KAGaA,EAAsBC,IAAOC,IAAV,8EAAGD,CAAH,2BAC1B,sLAGE,qBAIKE,EAAUF,IAAOC,IAAV,kEAAGD,CAAH,SACd,gBAWOG,GARUH,IAAOC,IAAV,kEAAGD,CAAH,SACd,mHAGeA,IAAOC,IAAV,gEAAGD,CAAH,SACZ,uBAGkBA,IAAOC,IAAV,mEAAGD,CAAH,SACf,wBAGOI,EAAOJ,IAAOC,IAAV,+DAAGD,CAAH,SACX,8DAGOK,EAAQL,IAAOM,KAAV,gEAAGN,CAAH,4BACZ,0ICVSD,EAjBa,SAAC,GAAD,IAAGQ,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAZ,OAC1B,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,EAAD,KACGA,GAEH,kBAAC,EAAD,KAAkBD,M,oCCyDTE,EA7DK,WAAO,IAAD,SAChBC,EADgB,EAChBA,eAAgBC,EADA,EACAA,kBA4BlBC,EAAeF,EAAeG,YAC9BC,EAAcH,EAAkBI,MAEtC,OACE,kBAACC,EAAA,EAAD,CAAWC,SAAO,GAChB,kBAACC,EAAA,EAAD,CAAcC,SAAUP,EAAaO,WACrC,+CAAqBP,EAAaQ,WAAlC,mBAA8DR,EAAaS,SAE1EP,EAAYQ,KAAI,SAACC,GAAU,IAAD,EAKrBA,EAAKC,KAHPC,EAFuB,EAEvBA,GACAC,EAHuB,EAGvBA,KAHuB,IAIvBb,YAAec,EAJQ,EAIRA,WAAYC,EAJJ,EAIIA,OAAQpB,EAJZ,EAIYA,KAGrC,OACE,kBAAC,EAAD,CACEqB,IAAKJ,EACLK,MAAOF,EACPT,SAAUQ,EACVpB,QAAS,kBAACwB,EAAA,EAAD,CAAYxB,QAASmB,IAC9BlB,KAAMA,OAMZ,qCAvBF,uICxBWwB,UAPmB,kBAChC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKJ,MAAM,gBACX,kBAAC,EAAD,S,kCCbJ,yBAiBeC,IAbI,SAAC,GAAD,IAAGxB,EAAH,EAAGA,QAAH,OACjB,0BACE4B,UAAU,cACVC,wBAAyB,CACvBC,OAAQ9B,O","file":"component---src-pages-publication-tsx-09d18568a3d9df537535.js","sourcesContent":["import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\n\r\nexport const TimelinePublication = styled.div`\r\n  ${tw`flex flex-col sm:flex-row w-full p-4 relative border-l border-blue-700`};\r\n\r\n  &:last-child {\r\n    ${tw`pb-0`};\r\n  }\r\n`;\r\n\r\nexport const Details = styled.div`\r\n  ${tw`w-full`};\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  ${tw`w-full sm:w-2/3 mt-4 sm:mt-0 text-xs`};\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  ${tw`text-sm`};\r\n`;\r\n\r\nexport const Subtitle = styled.div`\r\n  ${tw`text-sm`};\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  ${tw`text-lg font-bold mb-2`};\r\n`;\r\n\r\nexport const Point = styled.span`\r\n  ${tw`w-4 h-4 border border-blue-700 bg-blue-700 rounded-full absolute`};\r\n  left: -8px;\r\n  top: 22px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as Styled from './styles';\r\n\r\nconst TimelinePublication = ({ content, year }) => (\r\n  <Styled.TimelinePublication>\r\n    <Styled.Point />\r\n    <Styled.Details>\r\n      <Styled.Date>\r\n        {year}\r\n      </Styled.Date>\r\n      <Styled.Subtitle>{content}</Styled.Subtitle>\r\n    </Styled.Details>\r\n  </Styled.TimelinePublication>\r\n);\r\n\r\nTimelinePublication.propTypes = {\r\n  content: PropTypes.any.isRequired,\r\n  year: PropTypes.string.isRequired\r\n};\r\n\r\nexport default TimelinePublication;\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport TimelinePubs from 'components/ui/TimelinePublication';\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\nimport FormatHtml from 'components/utils/FormatHtml';\r\n\r\nconst Publication = () => {\r\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\r\n    query {\r\n      markdownRemark(frontmatter: { category: { eq: \"publication section\" } }) {\r\n        frontmatter {\r\n          title\r\n          subtitle\r\n          updated\r\n          conference\r\n          journal\r\n        }\r\n      }\r\n      allMarkdownRemark(\r\n        filter: { frontmatter: { category: { eq: \"publication\" } } }\r\n        sort: { order: DESC, fields: frontmatter___order }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            html\r\n            frontmatter {\r\n              year\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const sectionTitle = markdownRemark.frontmatter;\r\n  const publication = allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Container section>\r\n      <TitleSection subtitle={sectionTitle.subtitle} />\r\n      <i>Conference (C) = {sectionTitle.conference}, Journal (J) = {sectionTitle.journal}</i>\r\n\r\n      {publication.map((item) => {\r\n        const {\r\n          id,\r\n          html,\r\n          frontmatter: { university, degree, year }\r\n        } = item.node;\r\n\r\n        return (\r\n          <TimelinePubs\r\n            key={id}\r\n            title={degree}\r\n            subtitle={university}\r\n            content={<FormatHtml content={html} />}\r\n            year={year}\r\n          />\r\n        );\r\n\r\n      })}\r\n      \r\n      <b>Notes:</b> SSCI = Social Science Citation Index, SCIE = Science Citation Index Expanded, IF = Impact Factor, JCR = Journal Citation Reports.\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Publication;\r\n\r\n","import React from 'react';\r\n\r\nimport Layout from 'components/Layout';\r\nimport SEO from 'components/SEO';\r\n\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\nimport Publication from 'components/Publication';\r\n\r\n\r\nconst PublicationPage: React.FC = () => (\r\n  <Layout>\r\n    <SEO title=\"Publication\" />\r\n    <Publication />\r\n  </Layout>\r\n);\r\n\r\nexport default PublicationPage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst FormatHtml = ({ content }) => (\r\n  <span\r\n    className=\"format-html\"\r\n    dangerouslySetInnerHTML={{\r\n      __html: content\r\n    }}\r\n  />\r\n);\r\n\r\nFormatHtml.propTypes = {\r\n  content: PropTypes.any.isRequired\r\n};\r\n\r\nexport default FormatHtml;\r\n"],"sourceRoot":""}